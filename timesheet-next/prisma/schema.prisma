// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  teams     Team[]
  timeEntries TimeEntry[]
  leaveRequests LeaveRequest[]
}

model Team {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  members     User[]
  projects    Project[]
  employees   Employee[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  team        Team     @relation(fields: [teamId], references: [id])
  teamId      String
  timeEntries TimeEntry[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TimeEntry {
  id          String   @id @default(cuid())
  date        DateTime
  hours       Float
  description String?
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   String
  timeType    TimeType @relation(fields: [timeTypeId], references: [id])
  timeTypeId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TimeType {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  isCapDev    Boolean  @default(false)
  timeEntries TimeEntry[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model LeaveRequest {
  id          String   @id @default(cuid())
  startDate   DateTime
  endDate     DateTime
  status      String   @default("PENDING")
  type        String
  description String?
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Role {
  id          String     @id @default(cuid())
  name        String     @unique
  description String?
  employees   Employee[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Employee {
  id           String   @id @default(cuid())
  name         String
  payrollId    String   @unique
  hoursPerWeek Int      @default(40)
  team         Team     @relation(fields: [teamId], references: [id])
  teamId       String
  role         Role     @relation(fields: [roleId], references: [id])
  roleId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  leave        Leave[]
}

model Leave {
  id           String   @id @default(cuid())
  date         DateTime
  type         String   // "Annual Leave" | "Sick Leave" | "Bereavement Leave" | "Other"
  status       String   @default("PENDING") // "Approved" | "Pending" | "Taken"
  duration     Float    // in days
  employee     Employee @relation(fields: [employeeId], references: [id])
  employeeId   String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
} 