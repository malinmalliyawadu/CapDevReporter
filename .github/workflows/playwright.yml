name: Playwright Tests 🎭
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shards: [1, 2, 3, 4] # Run tests across 4 parallel jobs
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: 📦 Install dependencies
        run: |
          echo "::group::Installing npm dependencies"
          npm ci
          echo "::endgroup::"
      - name: 🗃️ Initialize database
        env:
          DATABASE_URL: file:./dev.db
          IPAYROLL_API_KEY: hehe
          IPAYROLL_COMPANY_ID: 1234567890
        run: |
          echo "::group::Setting up database"
          npx prisma generate
          npx prisma migrate reset --force
          echo "::endgroup::"
      - name: 🎭 Install Playwright Browsers
        run: |
          echo "::group::Installing Playwright browsers"
          npx playwright install --with-deps
          echo "::endgroup::"
      - name: 🧪 Run Playwright tests
        env:
          DATABASE_URL: file:./dev.db
        run: |
          echo "::group::Running Playwright tests"
          npx playwright test --shard ${{ matrix.shards }}/4
          echo "::endgroup::"
      - name: 📊 Upload test results
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-${{ matrix.shards }}
          path: playwright-report/
          retention-days: 30
