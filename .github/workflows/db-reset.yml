name: Database Reset üîÑ

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to reset'
        required: true
        default: 'production'
        type: choice
        options:
          - production

jobs:
  reset:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}
      url: https://capdevreporter-alb-982075008.ap-southeast-2.elb.amazonaws.com/
    
    env:
      ECS_CLUSTER: capdevreporter-cluster
      ECS_SERVICE: capdevreporter-db-reset-service

    steps:
      - name: ‚ö†Ô∏è Display Warning
        run: |
          echo "::warning::üö® WARNING: This will reset the database. All data will be lost!"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Service: ${{ env.ECS_SERVICE }}"
          sleep 5  # Give a moment to cancel if triggered accidentally

      - name: üì• Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üåç Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: üíæ Deploy and monitor database reset
        uses: ./.github/actions/deploy-ecs
        with:
          cluster: ${{ env.ECS_CLUSTER }}
          service: ${{ env.ECS_SERVICE }}

      - name: ‚úÖ Completion Message
        run: |
          echo "Database reset completed successfully!"
          echo "Note: The application may take a few moments to stabilize." 